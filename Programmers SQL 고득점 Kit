###SQL문 동작순서
FROM
ON
JOIN
WHERE
GROUP BY
HAVING
SELECT
DISTINCT
ORDER BY
LIMIT
OFFSET


### SELECT
#ORDER BY 오름차순 정렬(디폴트) : ASC
select *
from animal_ins
order by animal_id ASC

#ORDER BY 내림차순 정렬 : DESC
SELECT *
FROM ANIMAL_INS
ORDER BY ANIMAL_ID DESC

#Where로 조건에 맞는 데이터만 출력 : 보호 시작시 상태가 'Sick'인 경우만 출력 -> ==(x) =(o)
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WEHRE INTAKE_CONDITION = 'Sick'
ORDER BY ANIMAL_ID

#하나의 컬럼을 기준으로 오름차순 정렬 -> 해당 컬럼의 값이 같은 경우 다른 컬럼을 기준으로 내림차순 정렬
SELECT ANIMAL_ID, NAME, DATETIME
FROM ANIMAL_INS
ORDER BY NAME ASC, DATETIME DESC

1#상위 N개의 레코드만 출력 -> 가장 먼저 보호를 시작한 동물의 이름 출력 -> 보호를 시작한 시간순으로 정렬 후 상위 1개의 레코드만 출력
SELECT NAME
FROM ANIMAL_INS
ORDER BY DATETIME
LIMIT 1


### SUM, MAX, MIN
#테이블이나 필드명을 재정의 할 때 AS 사용
SELECT DATETIME AS '시간'
FROM ANIMAL_INS
ORDER BY DATETIME DESC
LIMIT 1

#MAX() 사용 -> 가장 최근에 보호를 시작한 동물이 언제 들어왔는지 출력
SELECT MAX(DATETIME) AS '시간'
FROM ANIMAL_INS

#MIN() 사용 -> 가장 먼저 보호를 시작한 동물이 언제 들어왔는지 출력
SELECT MIN(DATETIME) AS '시간'
FROM ANIMAL_INS

#집계함수 count() 사용 : 특정 컬럼의 숫자를 알고 싶을 때 count(컬럼명), 테이블 전체 행의 숫자를 알고 싶을 때 count(*) => 중복값을 포함해서 집계한다. 
SELECT COUNT(ANIMAL_ID) AS 'count'
FROM ANIMAL_INS

1#중복제거 키워드 distinct, 특정컬럼의 레코드가 NULL인 값은 집계하지 않는다-> 컬럼명 IS NOT NULL 
SELECT COUNT(DISTINCT NAME) #중복제거 후 이름의 갯수를 
FROM ANIMAL_INS
WHERE NAME IS NOT NULL


###GROUP BY
#그룹화하기 - GROU BY 특정컬럼 : 특정컬럼의 데이터를 그룹화한다.
SELECT ANIMAL_TYPE, COUNT(ANIMAL_ID) AS 'count'
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE

#그룹화한 특정컬럼의 어떤 레코드값이 2번 이상인 것들만 출력(단, 레코드의 값이 없는 것들은 제외) //WHERE은 그룹화하기 전에 조건을 걸때 사용, HAVING은 그룹화한 후에 조건을 걸때 사용
SELECT NAME, COUNT(NAME)
FROM ANIMAL_INS
WHERE NAME IS NOT NULL
GROUP BY NAME
HAVING COUNT(NAME) >= 2
ORDER BY NAME

#년-월-일 시:분:초 형태의 날짜데이터에서 시간데이터만 추출하기 : HOUR(기준날짜) -> YEAR(), MONTH(), DAY(), HOUR(), MINUTE(), SECOND()
1#입양시간 구하기(1)
<틀린코드>
SELECT HOUR(DATETIME) AS 'HOUR', COUNT(ANIMAL_ID) AS 'COUNT'
FROM ANIMAL_OUTS
GROUP BY HOUR(DATETIME)
HAVING HOUR>=9
ORDER BY HOUR(DATETIME)
->의문1 : SQL문 동작순서상 HAVING은 SELECT보다 먼저 실행되는데 어떻게 HAVING절에서 SELECT절에서 정의한 ALIAS를 사용할 수 있는가?
->의문2 : SQL문의 결과는 아래의 <맞는코드>와 차이가 없었는데 어째서 프로그래머스에서는 해당 코드를 틀렸다고 하는가?
->알게된 것 : HAVING문에서 'HOUR(DATETIME)'과 같이 순수한 컬럼명이 아닌 함수로 조작한 내용을 넣는다면 에러가 발생한다.

<맞는코드>
SELECT HOUR(DATETIME) AS 'HOUR', COUNT(ANIMAL_ID) AS 'COUNT'
FROM ANIMAL_OUTS
WHERE HOUR(DATETIME)>=9 AND HOUR(DATETIME)<20
GROUP BY HOUR(DATETIME)
ORDER BY HOUR(DATETIME)

1#입양시간 구하기(2) -> HOUR(DATETIME)이 자료에는 7~19까지밖에 없다. 하지만 결과를 0~23으로 나타내려면 어떻게 해야하는가?



###IS NULL
1#NULL처리하기 -> NAME이 NULL인 데이터들을 NO NAME으로 어떻게 표시하지? IFNULL(특정컬럼명, 해당컬럼이 NULL을 반환할 때 대체할 값)
SELECT ANIMAL_TYPE, IFNULL(NAME, 'No name'), SEX_UPON_INTAKE
FROM ANIMAL_INS
ORDER BY ANIMAL_ID

###JOIN
##ON 조인조건
#없어진 기록 찾기 : ANIMAL_INS RIGHT JOIN ANIMAL_OUTS에서 교집합을 빼려면 어떻게 해야하지? WHERE ANIMAL_INS IS NULL
SELECT O.ANIMAL_ID, O.NAME
FROM ANIMAL_INS AS I RIGHT JOIN ANIMAL_OUTS AS O 
ON I.ANIMAL_ID = O.ANIMAL_ID
WHERE I.ANIMAL_ID IS NULL
ORDER BY O.ANIMAL_ID ASC

#보호소에서 중성화한 동물 -> 데이터에 특정 문자열이 포함되었는지 확인 : LIKE 연산자 사용 
#LIKE연산자 활용하기 
-> '%라면%' = 앞뒤에 무슨 글자가 오든 라면이 들어가 있는 레코드 출력, '%라면' = 앞에 무슨 문자들이 오든 라면으로 끝나는 레코드 출력, '라면%' = 라면으로 시작하는 레코드 출력
-> '_라면%' = 맨앞의 한글자 뒤에 라면이 들어가 있는 레코드 출력, '%라면_' = 맨뒤의 한글자 앞에 라면이 들어가 있는 레코드 출력, '__라면%' = 맨앞의 두글자 뒤에 라면이 있는 레코드 출력
SELECT I.ANIMAL_ID, I.ANIMAL_TYPE, I.NAME
FROM ANIMAL_INS AS I INNER JOIN ANIMAL_OUTS AS O
ON I.ANIMAL_ID = O.ANIMAL_ID
WHERE I.SEX_UPON_INTAKE LIKE '%Intact%' and (O.SEX_UPON_OUTCOME LIKE '%Spayed%' OR O.SEX_UPON_OUTCOME LIKE '%Neutered%')
ORDER BY I.ANIMAL_ID ASC


###String, Date
#루시와 엘라찾기 -> 데이터값이 특정한 목록 중에 있다면 'WHERE 컬럼명 in (~~~~~~)' 사용
SELECT ANIMAL_ID, NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS
WHERE NAME IN ('Lucy', 'Ella', 'Pickle', 'Rogan', 'Sabrina', 'Mitty')

1#이름에 el이 들어가는 동물 찾기 -> 대소문자 구분없이 이름에 'el'이 들어가는 개의 ID와 이름 출력 -> LIKE 사용 시, 대소문자 구분X. 그러므로 LIKE '%el%'만 사용해도 된다.
<수정 전>
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE ANIMAL_TYPE='Dog' AND (NAME LIKE '%el%' or NAME LIKE '%eL%' or NAME LIKE '%El%' or NAME LIKE '%EL%')
ORDER BY NAME

<수정 후>
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE ANIMAL_TYPE='Dog' AND NAME LIKE '%el%'
ORDER BY NAME


1#중성화 여부 파악하기 -> 데이터에 특정한 문자열이 포함되어 있으면 O로 출력, 포함되지 않았으면 X로 출력하기
#MYSQL의 IF문 -> IF(조건문, 참일때 값, 거짓일때 값)
SELECT ANIMAL_ID, NAME, IF(SEX_UPON_INTAKE LIKE '%Neutered%' or SEX_UPON_INTAKE LIKE '%Spayed%', 'O', 'X') AS '중성화'
FROM ANIMAL_INS
ORDER BY ANIMAL_ID

#오랜기간 보호한 동물 : 보호시작 시간이 빠르고 입양시간이 늦은 것을 기준으로(즉, 보호기간이 긴 순서대로) 정렬 : DATETIME끼리 빼기 가능, ORDER BY에 연산자 사용 가능
SELECT I.ANIMAL_ID, I.NAME
FROM ANIMAL_INS AS I INNER JOIN ANIMAL_OUTS AS O
ON I.ANIMAL_ID = O.ANIMAL_ID
ORDER BY (O.DATETIME - I.DATETIME) DESC 
LIMIT 2

1#DATETIME에서 DATE로 형변환 -> 년월일시분초에서 년월일만 추출하기 : DATE_FORMAT(날짜, 형식) = '날짜'를 지정한 '형식'으로 출력
SELECT ANIMAL_ID, NAME, DATE_FORMAT(DATETIME, '%Y-%m-%d')
FROM ANIMAL_INS
ORDER BY ANIMAL_ID
