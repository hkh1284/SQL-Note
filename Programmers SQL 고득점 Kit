###SQL문 동작순서
FROM
JOIN
WHERE
GROUP BY
HAVING
SELECT
ORDER BY

### SELECT
#ORDER BY 오름차순 정렬(디폴트) : ASC
select *
from animal_ins
order by animal_id ASC

#ORDER BY 내림차순 정렬 : DESC
SELECT *
FROM ANIMAL_INS
ORDER BY ANIMAL_ID DESC

#Where로 조건에 맞는 데이터만 출력 : 보호 시작시 상태가 'Sick'인 경우만 출력 -> ==(x) =(o) 
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WEHRE INTAKE_CONDITION = 'Sick'
ORDER BY ANIMAL_ID

#하나의 컬럼을 기준으로 오름차순 정렬 -> 해당 컬럼의 값이 같은 경우 다른 컬럼을 기준으로 내림차순 정렬
SELECT ANIMAL_ID, NAME, DATETIME
FROM ANIMAL_INS
ORDER BY NAME ASC, DATETIME DESC

#상위 N개의 레코드만 출력 -> 가장 먼저 보호를 시작한 동물의 이름 출력 -> 보호를 시작한 시간순으로 정렬 후 상위 1개의 레코드만 출력
SELECT NAME
FROM ANIMAL_INS
ORDER BY DATETIME
LIMIT 1


### SUM, MAX, MIN
#테이블이나 필드명을 재정의 할 때 AS 사용
SELECT DATETIME AS '시간'
FROM ANIMAL_INS
ORDER BY DATETIME DESC
LIMIT 1

#MAX() 사용 -> 가장 최근에 보호를 시작한 동물이 언제 들어왔는지 출력
SELECT MAX(DATETIME) AS '시간'
FROM ANIMAL_INS

#MIN() 사용 -> 가장 먼저 보호를 시작한 동물이 언제 들어왔는지 출력
SELECT MIN(DATETIME) AS '시간'
FROM ANIMAL_INS

#집계함수 count() 사용 : 특정 컬럼의 숫자를 알고 싶을 때 count(컬럼명), 테이블 전체 행의 숫자를 알고 싶을 때 count(*) => 중복값을 포함해서 집계한다. 
SELECT COUNT(ANIMAL_ID) AS 'count'
FROM ANIMAL_INS

#중복제거 키워드 distinct, 특정컬럼의 레코드가 NULL인 값은 집계하지 않는다-> 컬럼명 IS NOT NULL 
SELECT COUNT(DISTINCT NAME)
FROM ANIMAL_INS
WHERE NAME IS NOT NULL


###GROUP BY
#그룹화하기 - GROU[ BY 특정컬럼 : 특정컬럼의 데이터를 그룹화한다.
SELECT ANIMAL_TYPE, COUNT(ANIMAL_ID) AS 'count'
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE

#그룹화한 특정컬럼의 어떤 레코드값이 2번 이상인 것들만 출력(단, 레코드의 값이 없는 것들은 제외) //WHERE은 그룹화하기 전에 조건을 걸때 사용, HAVING은 그룹화한 후에 조건을 걸때 사용
SELECT NAME, COUNT(NAME)
FROM ANIMAL_INS
WHERE NAME IS NOT NULL
GROUP BY NAME
HAVING COUNT(NAME) >= 2
ORDER BY NAME

#











